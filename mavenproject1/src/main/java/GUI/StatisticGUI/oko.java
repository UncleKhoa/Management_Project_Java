/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.StatisticGUI;

import static DAO.DBConnect.getConnect;
import DTO.doanhthuDTO;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import static Model.helpers.*;

/**
 *
 * @author Bon Nguyen
 */
public class oko extends javax.swing.JFrame {

    private ArrayList<doanhthuDTO> doanhthu;

    /**
     * Creates new form oko
     */
    public oko() {
        initComponents();
        getList();
//        ExportString();
        LS();
    }

    public ArrayList<doanhthuDTO> getList() {
        Connection conn = getConnect();
        doanhthu = new ArrayList<>();
        try {
            String sql = "select YEAR(hd.CreatedTime) as Year_hd, "
                    + "CEILING(MONTH(hd.CreatedTime) / 3) as Quarter_hd, "
                    + "SUM(hd.Total) as Total_hd, "
                    + "YEAR(nh.Created_Time) as Year_nh, "
                    + "CEILING(MONTH(nh.Created_Time) / 3) as Quarter_nh, "
                    + "SUM(nh.Total) as Total_nh "
                    + "from receipt hd, import nh "
                    + "where YEAR(hd.CreatedTime) = YEAR(nh.Created_Time) AND QUARTER(hd.CreatedTime) = QUARTER(nh.Created_Time) "
                    + "GROUP BY YEAR(hd.CreatedTime), CEILING(MONTH(hd.CreatedTime) / 3), YEAR(nh.Created_Time), CEILING(MONTH(nh.Created_Time) / 3) "
                    + "ORDER BY Year_hd, Quarter_nh";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                int year = rs.getInt("Year_hd");
                int quarter = rs.getInt("Quarter_hd");
                double tienvon = rs.getDouble("Total_nh");
                double tienban = rs.getDouble("Total_hd");
                double loinhuan = tienban - tienvon;
                doanhthuDTO doanhthuDTO = new doanhthuDTO(tienvon, loinhuan, tienban, year, quarter);
                doanhthu.add(doanhthuDTO);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        return doanhthu;
    }
    
    public void LS(){
        Connection conn = getConnect();
        doanhthu = new ArrayList<>();
        try {
            String sql = "select YEAR(hd.CreatedTime) as Year_hd, "
                    + "CEILING(MONTH(hd.CreatedTime) / 3) as Quarter_hd, "
                    + "SUM(hd.Total) as Total_hd, "
                    + "YEAR(nh.Created_Time) as Year_nh, "
                    + "CEILING(MONTH(nh.Created_Time) / 3) as Quarter_nh, "
                    + "SUM(nh.Total) as Total_nh "
                    + "from receipt hd, import nh "
                    + "where YEAR(hd.CreatedTime) = YEAR(nh.Created_Time) AND QUARTER(hd.CreatedTime) = QUARTER(nh.Created_Time) "
                    + "GROUP BY YEAR(hd.CreatedTime), CEILING(MONTH(hd.CreatedTime) / 3), YEAR(nh.Created_Time), CEILING(MONTH(nh.Created_Time) / 3) "
                    + "ORDER BY Year_hd, Quarter_nh";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                int year = rs.getInt("Year_hd");
                int quarter = rs.getInt("Quarter_hd");
                double tienvon = rs.getDouble("Total_nh");
                double tienban = rs.getDouble("Total_hd");
                double loinhuan = tienban - tienvon;
                System.out.print(year+" "+quarter+" "+ConvertDoubleToLong(tienvon)+" "+ConvertDoubleToLong(tienban)+" "+loinhuan);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

//    public void ExportString() {
//        for (doanhthuDTO obj : doanhthu) {
//            System.out.println(obj.getYear() + " " + obj.getQuarter() + " " + ConvertDoubleToInt(obj.getTienvon()) + " " + ConvertDoubleToInt(obj.getTiensauKM()) + " " + ConvertDoubleToInt(obj.getTienlai()));
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jButton1)
                .addContainerGap(183, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jButton1)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        ExportString();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(oko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(oko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(oko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(oko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new oko().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
