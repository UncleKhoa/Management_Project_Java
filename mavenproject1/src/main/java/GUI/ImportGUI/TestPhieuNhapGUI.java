/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.ImportGUI;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MY PC
 */
public class TestPhieuNhapGUI extends javax.swing.JFrame {

    /**
     * Creates new form TestPhieuNhapGUI
     */
    
       File file = new File("");
       DefaultTableModel model;
      
        String currentDirectory = file.getAbsolutePath();
        String relativePath = currentDirectory + "\\src\\main\\java\\IMG\\";
        String pdfpath = currentDirectory + "\\src\\main\\java\\pdf\\";
        private LocalDate today;
        private DateTimeFormatter formatter;
  private ImageIcon scaleImage(String filename, int width, int height) {
        try {
            BufferedImage img = ImageIO.read(new File(relativePath + filename));
            Image scaledImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH);
            return new ImageIcon(scaledImg);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return null;
    }
    public TestPhieuNhapGUI() {
        initComponents();
//         ImageIcon lich= scaleImage("bill.png", 83, 84);
//        lbLich.setIcon(lich);
//
//        ImageIcon ncc = scaleImage("bill.jpg", 47, 45);
//        lbNcc.setIcon(ncc);
//        ImageIcon nv = scaleImage("bill.jpg", 47, 45);
//        lbNv.setIcon(nv);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        btnXoa1 = new javax.swing.JButton();
        lbsl = new javax.swing.JLabel();
        txtTimkiem1 = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnThanhtoan = new javax.swing.JButton();
        btnLammoi = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lbTongtien = new javax.swing.JLabel();
        txtSua = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setSize(getPreferredSize());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 650));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(950, 650));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Nhập hàng");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable3.setRowHeight(30);
        jScrollPane3.setViewportView(jTable3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        btnXoa1.setBackground(new java.awt.Color(53, 21, 93));
        btnXoa1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa1.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa1.setText("Xóa");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        lbsl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbsl.setText("Số lượng");

        txtTimkiem1.setDoubleBuffered(true);

        btnSua.setBackground(new java.awt.Color(93, 14, 65));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.setPreferredSize(new java.awt.Dimension(78, 23));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnThanhtoan.setBackground(new java.awt.Color(128, 61, 59));
        btnThanhtoan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThanhtoan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhtoan.setText("Thanh toán");
        btnThanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhtoanActionPerformed(evt);
            }
        });

        btnLammoi.setBackground(new java.awt.Color(3, 6, 55));
        btnLammoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLammoi.setForeground(new java.awt.Color(255, 255, 255));
        btnLammoi.setText("Làm mới");
        btnLammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLammoiActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Tổng:");

        lbTongtien.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbTongtien.setText("120.000.000");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(lbsl, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSua, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTimkiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 7, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(lbTongtien)
                            .addGap(33, 33, 33)
                            .addComponent(btnThanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(25, 25, 25)
                            .addComponent(btnLammoi, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(147, 147, 147)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimkiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbTongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbsl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLammoi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        // TODO add your handling code here:
        //        try {
            //
            //            int[] rows = tblProduct.getSelectedRows();
            //            for (int i = rows.length - 1; i >= 0; i--) {
                //                model.removeRow(rows[i]);
                //            }
            //            //   MyMessageAccept accept = new MyMessageAccept(this, "Đã xóa sản phẩm thành công!");
            //        } catch (Exception ex) {
            //
            //        }
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        //        if (txtSp.getText().trim().isEmpty()) {
            //            // alert.setVisible(true);
            //            MyMessageAlert alert1 = new MyMessageAlert(parentFrame, "Vui lòng chọn sản phẩm cần sửa");
            //            alert1.setVisible(true);
            //        } else {
            //
            //            int row = this.tblProduct.getSelectedRow();
            //            Object ID = model.getValueAt(row, 0);
            //            String id = ID.toString();
            //            int sl = Integer.valueOf(txtSp.getText());
            //            if (sl == 0) {
                //                MyMessageAlert alert2 = new MyMessageAlert(parentFrame, "Số lượng cần sửa lớn hơn 0");
                //                alert2.setVisible(true);
                //            } else {
                //                productBUS product = new productBUS();
                //                try {
                    //                    if (product.compareQuantity(id, sl) == 0) {
                        //                        MyMessageAlert alert = new MyMessageAlert(parentFrame, "Số lượng sản phẩm " + id + " không đủ");
                        //                        alert.setVisible(true);
                        //                    } else {
                        //                        model.setValueAt(sl, row, 3);
                        //                    }
                    //
                    //                } catch (SQLException ex) {
                    //                    Logger.getLogger(sell.class.getName()).log(Level.SEVERE, null, ex);
                    //                }
                //
                //            }
            //
            //        }
        //        btnThanhtoan.hide();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhtoanActionPerformed
        // TODO add your handling code here:
        //       this.btnThanhtoan.hide();
        //  this.btnXuathd.show();
        //        this.btnHuy.hide();
        //        this.btnLammoi.show();
        //        String maHd = this.lbhd.getText();
        //        String maKh = this.lbMakh.getText();
        //        String id = iD;
        //        Date create_day = java.sql.Date.valueOf(today);
        //        //String totalText = this.lbThanhtoan.getText();
        //        String tien = this.txtTiennhan.getText();
        //        if (!Check_Number(tien)) {
            //            MyMessageAlert alert = new MyMessageAlert(parentFrame, "Tiền nhận không hợp lệ");
            //            alert.setVisible(true);
            //            return;
            //        } else {
            //            try {
                //                int tn = Integer.parseInt(tien);
                //                String tiennhan = formatMoney(tn);
                //                this.txtTiennhan.setText(tiennhan);
                //                if (tn < tt) {
                    //                    MyMessageAlert alert = new MyMessageAlert(parentFrame, "Vui lòng nhập đủ số tiền");
                    //                    alert.setVisible(true);
                    //                    return;
                    //                }
                //                int tienthua = tn - tt;
                //                String thua = formatMoney(tienthua);
                //                this.lbTienthua.setText(thua);
                //                // Sử dụng biến tn ở đây
                //            } catch (NumberFormatException e) {
                //
                //            }
            //        }
        //        double Total = Double.valueOf(tt);
        //
        //        receptDTO receipt = new receptDTO(maHd, maKh, id, create_day, Total);
        //        receptBUS bus = new receptBUS();
        //        try {
            //            bus.add(receipt);
            //        } catch (SQLException ex) {
            //            Logger.getLogger(sell.class.getName()).log(Level.SEVERE, null, ex);
            //        }
        //        receptDetailDTO receiptDTO = new receptDetailDTO();
        //        receipt_DetailBUS receiptDetailBUS = new receipt_DetailBUS();
        //        int l = receiptDetailBUS.list_size();
        //        l = l + 1;
        //        // List<table_for_receptDTO> dataList = new ArrayList<>();
        //        List<table_receiptDTO> dataList = new ArrayList<>();
        //        for (int row = 0; row < this.tblProduct.getRowCount(); row++) {
            //
            //            String receiptDetailID = receiptDetailBUS.createId(l, row + 1);
            //            String receiptID = this.lbhd.getText();
            //            Object proID = model.getValueAt(row, 0);
            //            String productID = proID.toString();
            //            String promotionID = " ";
            //            promotion_detailBUS proBUS = new promotion_detailBUS();
            //
            //            try {
                //                promotionID = proBUS.getPromotionID(productID);
                //            } catch (SQLException ex) {
                //                Logger.getLogger(sell.class.getName()).log(Level.SEVERE, null, ex);
                //            }
            //            Object sl = model.getValueAt(row, 3);
            //            int quantity = sl instanceof Integer ? (int) sl : 0; // Safely cast to Integer
            //
            //            Object dongia = model.getValueAt(row, 4);
            //            double unitPrice = 0.0; // Default value if parsing fails
            //            if (dongia instanceof Number) {
                //                unitPrice = ((Number) dongia).doubleValue() * quantity; // Safely parse to double
                //            }
            //
            //            double subTotal = 0;
            //            double sub = 0;
            //            float per = 0;
            //            try {
                //                per = proBUS.promotion_percent(productID);
                //            } catch (SQLException ex) {
                //                Logger.getLogger(sell.class.getName()).log(Level.SEVERE, null, ex);
                //            }
            //            if (per != 0) {
                //                sub = Math.floor((1 - per) * unitPrice);
                //                subTotal = sub * quantity;
                //            } //  subTotal = Math.floor((1 - per) * quantity * unitPrice);
            //            else {
                //                subTotal = quantity * unitPrice;
                //                sub = subTotal;
                //            }
            //
            //            productBUS product = new productBUS();
            //            receptDetailDTO dto = new receptDetailDTO(receiptDetailID, receiptID, promotionID, productID, quantity, unitPrice, subTotal);
            //            String soluong = Integer.toString(quantity);
            //            int u = ConvertDoubleToInt(unitPrice);
            //            String giagoc = formatMoney(u);
            //            int s = ConvertDoubleToInt(sub);
            //            String giaban = formatMoney(s);
            //            int stt = ConvertDoubleToInt(subTotal);
            //            String tong = formatMoney(stt);
            //            table_receiptDTO table_receipt = new table_receiptDTO(productID, soluong, giagoc, giaban, tong);
            //            dataList.add(table_receipt);
            //            try {
                //                receiptDetailBUS.add(dto);
                //            } catch (SQLException ex) {
                //                Logger.getLogger(sell.class.getName()).log(Level.SEVERE, null, ex);
                //
                //            }
            //            try {
                //                product.update_quantity(productID, quantity);
                //            } catch (SQLException ex) {
                //                Logger.getLogger(sell.class.getName()).log(Level.SEVERE, null, ex);
                //            }
            //        }
        //        try {
            //            add_to_jasper(dataList);
            //        } catch (JRException ex) {
            //            Logger.getLogger(sell.class.getName()).log(Level.SEVERE, null, ex);
            //        }
        //        printTableReceiptList(dataList);
        //        btnThanhtoan.hide();
    }//GEN-LAST:event_btnThanhtoanActionPerformed

    private void btnLammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLammoiActionPerformed
        // TODO add your handling code here:
        //
        //        this.btnChon.setVisible(true);
        //        this.btnXoa.setVisible(true);
        //        this.btnSua.setVisible(true);
        //        this.txtSp.setVisible(true);
        //        this.btnXuathd.hide();
        //        this.btnXacnhan.setVisible(true);
        //        this.btnAddkh.setVisible(true);
        //        this.txtSdt.setText("");
        //        this.lbMakh.setText(" ");
        //        this.lbKm.setText(" ");
        //        this.lbXemkm.hide();
        //        this.lbTenkhach.setText(" ");
        //        this.lbThanhtoan.setText(" ");
        //        this.lbTongtien.setText(" ");
        //        this.lbKm.setText(" ");
        //        receptBUS receipt = new receptBUS();
        //        String mhd = receipt.createId();
        //        this.lbhd.setText(mhd);
        //        this.lbTenkh.setText(" ");
        //        this.txtTiennhan.setText(" ");
        //        this.txtTiennhan.setVisible(false);
        //        this.lbTienthua.setText(" ");
        //        model.setRowCount(0);
        //        this.btnThanhtoan.hide();
        //        this.btnXacnhan.show();
    }//GEN-LAST:event_btnLammoiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestPhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestPhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestPhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestPhieuNhapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestPhieuNhapGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLammoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThanhtoan;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JLabel lbTongtien;
    private javax.swing.JLabel lbsl;
    private javax.swing.JTextField txtSua;
    private javax.swing.JTextField txtTimkiem1;
    // End of variables declaration//GEN-END:variables
}
